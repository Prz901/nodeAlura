"use strict";

var GlobalComponentsContext = require("./GlobalComponentsContext");

function ComponentsContext(out, parentComponentsContext) {
    var globalComponentsContext;
    var componentDef;

    if (parentComponentsContext) {
        globalComponentsContext = parentComponentsContext.l_;
        componentDef = parentComponentsContext.j_;

        var nestedContextsForParent;
        if (!(nestedContextsForParent = parentComponentsContext._L_)) {
            nestedContextsForParent = parentComponentsContext._L_ = [];
        }

        nestedContextsForParent.push(this);
    } else {
        globalComponentsContext = out.global.h_;
        if (globalComponentsContext === undefined) {
            out.global.h_ = globalComponentsContext = new GlobalComponentsContext(out);
        }
    }

    this.l_ = globalComponentsContext;
    this.h_ = [];
    this.z_ = out;
    this.j_ = componentDef;
    this._L_ = undefined;
}

ComponentsContext.prototype = {
    A_: function (doc) {
        var componentDefs = this.h_;

        ComponentsContext._M_(componentDefs, doc);

        this.z_.emit("_N_");

        // Reset things stored in global since global is retained for
        // future renders
        this.z_.global.h_ = undefined;

        return componentDefs;
    }
};

function getComponentsContext(out) {
    return out.h_ || (out.h_ = new ComponentsContext(out));
}

module.exports = exports = ComponentsContext;

exports.D_ = getComponentsContext;